#!/usr/bin/env python
# -*- coding: utf-8 -*-

################################################################################
# Copyright 2018 ROBOTIS CO., LTD.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
################################################################################

# Author: Leon Jung, Gilbert

import rospy
import numpy as np
from enum import Enum
from std_msgs.msg import UInt8


class CoreModeDecider():
    def __init__(self):
        # subscribes
        self.sub_returned_mode = rospy.Subscriber('/core/returned_mode', UInt8, self.cb_returned_mode, queue_size=1)

        # publishes
        self.pub_decided_mode = rospy.Publisher('/core/decided_mode', UInt8, queue_size=1)

        self.InvokedObject = Enum('InvokedObject', 'traffic_light')
        self.CurrentMode = Enum('CurrentMode', 'lane_following traffic_light')

        self.current_mode = self.CurrentMode.lane_following.value
        self.init_mode()

    def cb_returned_mode(self, mode):
        rospy.loginfo("Init Mode")
        self.init_mode()

    def init_mode(self):  # starts only when the program is started initially or any mission is completed
        self.publish_mode()

    def publish_mode(self):
        decided_mode = UInt8()
        decided_mode.data = self.current_mode
        self.pub_decided_mode.publish(decided_mode)

    @staticmethod
    def main():
        rospy.spin()


if __name__ == '__main__':
    rospy.init_node('core_mode_decider')
    node = CoreModeDecider()
    node.main()
